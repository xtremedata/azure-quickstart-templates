{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "artifactsBaseUrl": {
      "type": "string",
      "defaultValue": "https://raw.githubusercontent.com/xtremedata/azure-quickstart-templates/solution/xtremedata-dbx-cluster-centos",
      "metadata": {
        "description": "Base URL of the solution template",
        "artifactsBaseUrl": ""
      }
    },
    "location": {
      "type": "string",
      "metadata": {
        "description": "Azure cloud location for dbX cluster"
      }
    },
    "clusterName": {
      "type": "string",
      "metadata": {
        "description": "dbX cluster name used as prefix for host names"
      }
    },
    "storageAccountPrefix": {
      "type": "string",
      "metadata": {
        "description": "Prefix for new storage account that will be created to store virtual machine VHDs"
      }
    },
    "storageAccountType": {
      "type": "string",
      "defaultValue": "Premium_LRS",
      "allowedValues": [
        "Premium_LRS"
      ],
      "metadata": {
        "description": "Storage account type"
      }
    },
    "adminUserName": {
      "type": "string",
      "metadata": {
        "description": "username used to administer dbX (must be 'azure-user')"
      }
    },
    "authType": {
      "type": "string",
      "defaultValue": "password",
      "allowedValues": [
        "password",
        "sshPublicKey"
      ],
      "metadata": {
        "description": "Authentication type for the virtual machines"
      }
    },
    "adminPassword": {
      "type": "securestring",
      "defaultValue": "",
      "metadata": {
        "description": "Password to login into dbX cluster nodes"
      }
    },
    "adminSshPublicKey": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "OpenSSH public key used to login into dbX cluster nodes as alternative to password"
      }
    },
    "vmSize": {
      "type": "string",
      "defaultValue": "Standard_DS12",
      "metadata": {
        "description": "dbX cluster node VM type"
      }
    },
    "vmCount": {
      "type": "int",
      "defaultValue": 2,
      "allowedValues": [
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10
      ],
      "metadata": {
        "description": "Number of nodes for dbX cluster"
      }
    },
    "vnetNewOrExisting": {
      "type": "string",
      "defaultValue": "new",
      "allowedValues": [
        "new",
        "existing"
      ],
      "metadata": {
        "description": "Specifies if a new or an existing virtual network should be used for deploying VMs"
      }
    },
    "vnetResourceGroup": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Virtual Network Resource Group"
      }
    },
    "vnetName": {
      "type": "string",
      "metadata": {
        "description": "Virtual Network name"
      }
    },
    "vnetAddressSpace": {
      "type": "string",
      "defaultValue": "10.0.0.0/16",
      "metadata": {
        "description": "Virtual Network Address Prefix (i.e. CIDR)"
      }
    },
    "subnetName": {
      "type": "string",
      "defaultValue": "subnet-dbx",
      "metadata": {
        "description": "all dbX nodes will be deployed into this subnet within the Virtual Network"
      }
    },
    "subnetAddressSpace": {
      "type": "string",
      "defaultValue": "10.0.0.0/24",
      "metadata": {
        "description": "Virtual Network subnet Address Prefix (i.e. CIDR)"
      }
    },
    "subnetStartAddress": {
      "type": "string",
      "defaultValue": "10.0.0.10",
      "metadata": {
        "description": "Starting IP address of the dbX cluster in the subnet"
      }
    },
    "publicIPAddressNewOrExisting": {
      "type": "string",
      "defaultValue": "new",
      "allowedValues": [
        "new",
        "existing"
      ],
      "metadata": {
        "description": "Parameter that specifies if an new or an existing public IP should be used for deployment"
      }
    },
    "publicIPAddressResourceGroup": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Public IP resource group for cases when existing public IP is used"
      }
    },
    "publicIPAddressName": {
      "type": "string",
      "metadata": { "description": "Public IP Address name" }
    },
    "publicIPAddressDomainNameLabel": {
      "type": "string",
      "defaultValue": "",
      "metadata": { "description": "Public IP DNS label" }
    }
  },
  "variables": {
    "preview": "",
    "storageAccountName": "[concat(parameters('storageAccountPrefix'),'1')]",
    "storageAccountType": "[parameters('storageAccountType')]",
    "storageAccountNameStandard": "[concat(parameters('storageAccountPrefix'),'2')]",
    "storageAccountTypeStandard": "Standard_LRS",
    "addrSplitDelim": [ ".", "/" ],
    "subnetAddrSpComponents": "[split(parameters('subnetAddressSpace'),variables('addrSplitDelim'))]",
    "subnetStartAddrComponents": "[split(parameters('subnetStartAddress'),variables('addrSplitDelim'))]",
    "availabilitySetSettings": {
      "name": "[concat(parameters('clusterName'),'-availset')]",
      "faultDomainCount": "3",
      "updateDomainCount": "5"
    },
    "mktPublisher": "xtremedata",
    "mktOffer": "[concat('dbx', variables('preview'))]",
    "mktSKU": "dbx15001mnt",
    "imageReferenceDbx": {
      "publisher": "[variables('mktPublisher')]",
      "offer": "[variables('mktOffer')]",
      "sku": "[variables('mktSKU')]",
      "version": "latest"
    },
    "dataDiskSize": 512,
    "hostName": "[concat(parameters('clusterName'), '-vm')]",
    "subdeploymentSuffix": "[uniqueString(deployment().name)]",
    "baseUrl": "[concat(parameters('artifactsBaseUrl'),'/')]",
    "startScriptName": "azure-dbx-san-start.sh",
    "startScriptUrl": "[concat(variables('baseUrl'),variables('startScriptName'))]",
    "templateUrlVnet": "[concat(variables('baseUrl'),'vnet-',parameters('vnetNewOrExisting'),'.json')]",
    "templateUrlPublicIP": "[concat(variables('baseUrl'),'publicIP-',parameters('publicIPAddressNewOrExisting'),'.json')]",
    "publicIPID": "[resourceId(parameters('publicIPAddressResourceGroup'), 'Microsoft.Network/publicIPAddresses', parameters('publicIPAddressName'))]",
    "vnetID": "[resourceId(parameters('vnetResourceGroup'), 'Microsoft.Network/virtualNetworks', parameters('vnetName'))]",
    "subnetID": "[concat(variables('vnetID'), '/subnets/', parameters('subnetName'))]",
    "sshKeyPath": "[concat('/home/',parameters('adminUserName'),'/.ssh/authorized_keys')]",
    "linuxConfiguration_sshPublicKey": {
      "disablePasswordAuthentication": "true",
      "ssh": {
        "publicKeys": [
          {
            "path": "[variables('sshKeyPath')]",
            "keyData": "[parameters('adminSshPublicKey')]"
          }
        ]
      }
    },
    "linuxConfiguration_password": { },
    "linuxConfiguration": "[variables(concat('linuxConfiguration_',parameters('authType')))]"
  },
  "resources": [
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[variables('storageAccountName')]",
      "location": "[parameters('location')]",
      "properties": {
        "accountType": "[variables('storageAccountType')]"
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[variables('storageAccountNameStandard')]",
      "location": "[parameters('location')]",
      "properties": {
        "accountType": "[variables('storageAccountTypeStandard')]"
      }
    },
    {
      "apiVersion": "2015-01-01",
      "type": "Microsoft.Resources/deployments",
      "name": "[concat('dbx-vnet-',variables('subdeploymentSuffix'))]",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('templateUrlVnet')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "vnetName": {
            "value": "[parameters('vnetName')]"
          },
          "vnetResourceGroup": {
            "value": "[parameters('vnetResourceGroup')]"
          },
          "vnetAddressSpace": {
            "value": "[parameters('vnetAddressSpace')]"
          },
          "subnetName": {
            "value": "[parameters('subnetName')]"
          },
          "subnetAddressSpace": {
            "value": "[parameters('subnetAddressSpace')]"
          }
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Compute/availabilitySets",
      "name": "[variables('availabilitySetSettings').name]",
      "location": "[parameters('location')]",
      "properties": {
        "platformFaultDomainCount": "[variables('availabilitySetSettings').faultDomainCount]",
        "platformUpdateDomainCount": "[variables('availabilitySetSettings').updateDomainCount]"
      }
    },
    {
      "apiVersion": "2015-01-01",
      "type": "Microsoft.Resources/deployments",
      "name": "[concat('dbx-pubIP-',variables('subdeploymentSuffix'))]",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('templateUrlPublicIP')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "publicIPAddressName": {
            "value": "[parameters('publicIPAddressName')]"
          },
          "publicIPAddressType": {
            "value": "Dynamic"
          },
          "publicIPAddressDomainNameLabel": {
            "value": "[parameters('publicIPAddressDomainNameLabel')]"
          },
          "publicIPAddressResourceGroup": {
            "value": "[parameters('publicIPAddressResourceGroup')]"
          }
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat(variables('hostName'),'-nic0')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Resources/deployments/dbx-vnet-',variables('subdeploymentSuffix'))]",
        "[concat('Microsoft.Resources/deployments/dbx-pubIP-',variables('subdeploymentSuffix'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ip1",
            "properties": {
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "[parameters('subnetStartAddress')]",
              "publicIPAddress": {
                "id": "[variables('publicIPID')]"
              },
              "subnet": {
                "id": "[reference(concat('Microsoft.Resources/deployments/dbx-vnet-',variables('subdeploymentSuffix')),'2015-01-01').outputs.subnetID.value]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat(variables('hostName'),'-nic',copyindex(1))]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Resources/deployments/dbx-vnet-',variables('subdeploymentSuffix'))]"
      ],
      "copy": {
        "name": "nicLoop",
        "count": "[sub(parameters('vmCount'),1)]"
      },
      "properties": {
        "ipConfigurations": [
          {
            "name": "ip1",
            "properties": {
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "[concat(variables('subnetStartAddrComponents')[0],'.',variables('subnetStartAddrComponents')[1],'.', add(int(variables('subnetStartAddrComponents')[2]), div(add(int(variables('subnetStartAddrComponents')[3]),copyindex(1)),256)) ,'.', mod(add(int(variables('subnetStartAddrComponents')[3]),copyindex(1)),256))]",
              "subnet": {
                "id": "[reference(concat('Microsoft.Resources/deployments/dbx-vnet-',variables('subdeploymentSuffix')),'2015-01-01').outputs.subnetID.value]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[concat(variables('hostName'),'-',copyindex())]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
        "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountNameStandard'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('hostName'), '-nic', copyindex())]"
      ],
      "copy": {
        "name": "vmLoop",
        "count": "[parameters('vmCount')]"
      },
      "plan": {
        "name": "[variables('mktSKU')]",
        "publisher": "[variables('mktPublisher')]",
        "product": "[variables('mktOffer')]"
      },
      "properties": {
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets', variables('availabilitySetSettings').name)]"
        },
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "osProfile": {
          "computerName": "[concat(variables('hostName'),'-',copyindex())]",
          "adminUserName": "[parameters('adminUserName')]",
          "adminPassword": "[parameters('adminPassword')]",
          "linuxConfiguration": "[variables('linuxConfiguration')]"
        },
        "storageProfile": {
          "imageReference": "[variables('imageReferenceDbx')]",
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat('http://', variables('storageAccountName'), '.blob.core.windows.net/vhds/', variables('hostName'),'-',copyindex(), '-osdisk.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          },
          "dataDisks": [
            {
              "name": "datadisk0",
              "diskSizeGB": "[variables('dataDiskSize')]",
              "lun": 0,
              "vhd": {
                "Uri": "[concat('http://', variables('storageAccountName'), '.blob.core.windows.net/vhds/', variables('hostName'),'-',copyindex(), '-datadisk0.vhd')]"
              },
              "caching": "None",
              "createOption": "Empty"
            },
            {
              "name": "datadisk1",
              "diskSizeGB": "[variables('dataDiskSize')]",
              "lun": 1,
              "vhd": {
                "Uri": "[concat('http://', variables('storageAccountName'), '.blob.core.windows.net/vhds/', variables('hostName'),'-',copyindex(), '-datadisk1.vhd')]"
              },
              "caching": "None",
              "createOption": "Empty"
            },
            {
              "name": "datadisk2",
              "diskSizeGB": "[variables('dataDiskSize')]",
              "lun": 2,
              "vhd": {
                "Uri": "[concat('http://', variables('storageAccountName'), '.blob.core.windows.net/vhds/', variables('hostName'),'-',copyindex(), '-datadisk2.vhd')]"
              },
              "caching": "None",
              "createOption": "Empty"
            },
            {
              "name": "datadisk3",
              "diskSizeGB": "[variables('dataDiskSize')]",
              "lun": 3,
              "vhd": {
                "Uri": "[concat('http://', variables('storageAccountName'), '.blob.core.windows.net/vhds/', variables('hostName'),'-',copyindex(), '-datadisk3.vhd')]"
              },
              "caching": "None",
              "createOption": "Empty"
            }
          ]
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('hostName'),'-nic',copyindex()))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": "true",
            "storageUri": "[concat('http://',variables('storageAccountNameStandard'),'.blob.core.windows.net')]"
          }
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('hostName'),'-',copyindex(), '/dbx-setup')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', variables('hostName'),'-',copyindex())]"
      ],
      "copy": {
        "name": "extensionLoop",
        "count": "[parameters('vmCount')]"
      },
      "properties": {
        "publisher": "Microsoft.OSTCExtensions",
        "type": "CustomScriptForLinux",
        "typeHandlerVersion": "1.3",
        "settings": {
          "fileUris": [
            "[variables('startScriptUrl')]"
          ],
          "commandToExecute": "[concat('bash ',variables('startScriptName'),' ',reference(concat(variables('hostName'),'-nic0')).ipConfigurations[0].properties.privateIPAddress,' ',parameters('clusterName'),' ',parameters('vmCount'),' ',copyindex() )]"
        }
      }
    }
  ],
  "outputs": {
    "fqdn": {
      "value": "[reference(concat('dbx-pubIP-',variables('subdeploymentSuffix'))).outputs.fqdn.value]",
      "type": "string"
    },
    "sshCommand": {
      "value": "[concat('ssh ', parameters('adminUserName'), '@', reference(concat('dbx-pubIP-',variables('subdeploymentSuffix'))).outputs.fqdn.value)]",
      "type": "string"
    },
    "xdadmUrl": {
      "value": "[concat('https://', reference(concat('dbx-pubIP-',variables('subdeploymentSuffix'))).outputs.fqdn.value, ':2400/xdadm')]",
      "type": "string"
    }
  }
}
