{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "location": {
      "type": "string",
      "defaultValue": "West US",
      "allowedValues": [
          "West US",
          "East US 2",
          "East US",
          "Central US",
          "South Central US",
          "North Central US",
          "West Europe",
          "North Europe",
          "East Asia",
          "Southeast Asia",
          "Japan West",
          "Japan East",
          "Brazil South",
          "Australia East",
          "Australia Southeast",
          "Central India",
          "West India",
          "South India",
          "westus",
          "eastus2",
          "eastus",
          "centralus",
          "southcentralus",
          "northcentralus",
          "westeurope",
          "northeurope",
          "eastasia",
          "southeastasia",
          "japanwest",
          "japaneast",
          "brazilsouth",
          "australiaeast",
          "australiasoutheast",
          "centralindia",
          "westindia",
          "southindia",
          "centralindia"
      ],
      "metadata": {
        "description": "Azure cloud location for dbX cluster"
      }
    },
    "newStorageAccountName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Prefix for new storage account that will be created to store virtual machine VHDs"
      }
    },
    "domainName": {
      "type": "string",
      "metadata": {
        "description": "Prefix for dbX cluster public domain name"
      }
    },
    "authType": {
      "type": "string",
      "defaultValue": "password",
      "allowedValues": [
          "password",
          "sshPublicKey"
      ],
      "metadata": {
          "description": "Authentication type for the virtual machines"
      }
    },
    "adminPassword": {
      "type": "securestring",
      "defaultValue": "",
      "metadata": {
        "description": "Password to login into dbX cluster nodes"
      }
    },
    "adminSshPublicKey": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "OpenSSH public key used to login into dbX cluster nodes as alternative to password"
      }
    },
    "vmSize": {
      "type": "string",
      "defaultValue": "Standard_DS14",
      "allowedValues": [
        "Standard_DS12",
        "Standard_DS13",
        "Standard_DS14"
      ],
      "metadata": {
        "description": "dbX cluster node type"
      }
    },
    "vmCount": {
      "type": "int",
      "defaultValue": 2,
      "allowedValues": [
        2,
        4,
        6,
        8,
        10
      ],
      "metadata": {
        "description": "Number of nodes for dbX cluster"
      }
    }
  },
  "variables": {
    "preview": "-preview",
    "srcImage": "https://dbxpub.blob.core.windows.net/imgs/dbx-v4.0.65-os-2015-11-01.vhd?sv=2014-02-14&sr=c&sig=YmW0g7FLPxBlbYcpTGZalTlV%2BAUIeOG0AxmtV%2BZWpJE%3D&st=2015-11-01T05%3A00%3A00Z&se=2017-11-10T06%3A00%3A00Z&sp=r",
    "storageAccountType": "Premium_LRS",
    "vnetAddressSpace": "10.0.0.0/16",
    "subnetAddressSpace": "10.0.0.0/24",
    "addrSplitDelim": [".", "/"],
    "subnetAddrComponents": "[split(variables('subnetAddressSpace'),variables('addrSplitDelim'))]",
    "subnetName": "Subnet-1",
    "availabilitySetSettings": {
      "name": "availabilitySet1",
      "faultDomainCount": "3",
      "updateDomainCount": "5"
    },
    "imageReferenceCentOS": {
      "publisher": "OpenLogic",
      "offer": "CentOS",
      "sku": "7.1",
      "version": "latest"
    },
    "mktPublisher": "xtremedata",
    "mktOffer": "[concat('dbx', variables('preview'))]",
    "mktSKU": "dbx15001mnt",
    "imageReferenceDbx": {
      "publisher": "[variables('mktPublisher')]",
      "offer": "[variables('mktOffer')]",
      "sku": "[variables('mktSKU')]",
      "version": "latest"
    },
    "storageAccountName": "[parameters('newStorageAccountName')]",
    "dataDiskSize": 128,
    "osImage": "[concat('http://',variables('storageAccountName'),'.blob.core.windows.net/img/os-disk-img.vhd')]",
    "vnetName": "[concat(parameters('domainName'), '.vn')]",
    "hostName": "[concat(parameters('domainName'), '-vm')]",
    "templateURLBase": "https://raw.githubusercontent.com/xtremedata/azure-quickstart-templates/master/xtremedata-dbx-cluster-centos",
    "adminUsername": "azure-user",
    "sshKeyPath": "[concat('/home/',variables('adminUsername'),'/.ssh/authorized_keys')]",
    "linuxConfiguration_sshPublicKey": {
        "disablePasswordAuthentication": "true",
        "ssh": {
            "publicKeys": [
                {
                    "path": "[variables('sshKeyPath')]",
                    "keyData": "[parameters('adminSshPublicKey')]"
                }
            ]
        }
    },
    "linuxConfiguration_password": { },
    "linuxConfiguration": "[variables(concat('linuxConfiguration_',parameters('authType')))]"
  },
  "resources": [
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[variables('storageAccountName')]",
      "location": "[parameters('location')]",
      "properties": {
        "accountType": "[variables('storageAccountType')]"
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Compute/availabilitySets",
      "name": "[variables('availabilitySetSettings').name]",
      "location": "[parameters('location')]",
      "properties": {
        "platformFaultDomainCount": "[variables('availabilitySetSettings').faultDomainCount]",
        "platformUpdateDomainCount": "[variables('availabilitySetSettings').updateDomainCount]"
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('vnetName')]",
      "location": "[parameters('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('vnetAddressSpace')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "[variables('subnetAddressSpace')]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "dbx-ip",
      "location": "[parameters('location')]",
      "properties": {
        "publicIPAllocationMethod": "Dynamic",
        "idleTimeoutInMinutes": 4,
        "dnsSettings": {
          "domainNameLabel": "[parameters('domainName')]"
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "nic0",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/virtualNetworks/', variables('vnetName'))]",
        "[concat('Microsoft.Network/publicIPAddresses/', 'dbx-ip')]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ip1",
            "properties": {
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "[concat(variables('subnetAddrComponents')[0],'.',variables('subnetAddrComponents')[1],'.',variables('subnetAddrComponents')[2],'.10')]",
              "publicIPAddress": {
                "id": "[concat(resourceGroup().id, '/providers/Microsoft.Network/publicIPAddresses/', 'dbx-ip')]"
              },
              "subnet": {
                "id": "[concat(resourceId('Microsoft.Network/virtualNetworks', variables('vnetName')), '/subnets/', variables('subnetName'))]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat('nic', copyindex(1))]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/virtualNetworks/', variables('vnetName'))]"
      ],
      "copy": {
        "name": "nicLoop",
        "count": "[sub(parameters('vmCount'),1)]"
      },
      "properties": {
        "ipConfigurations": [
          {
            "name": "ip1",
            "properties": {
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "[concat(variables('subnetAddrComponents')[0],'.',variables('subnetAddrComponents')[1],'.',variables('subnetAddrComponents')[2],'.', copyindex(11))]",
              "subnet": {
                "id": "[concat(resourceId('Microsoft.Network/virtualNetworks', variables('vnetName')), '/subnets/', variables('subnetName'))]"
              }
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[concat(variables('hostName'),'-0')]",
      "apiVersion": "2015-06-15",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', 'nic0')]"
      ],
      "plan": {
        "name": "[variables('mktSKU')]",
        "publisher": "[variables('mktPublisher')]",
        "product": "[variables('mktOffer')]"
      },
      "properties": {
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets', variables('availabilitySetSettings').name)]"
        },
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "osProfile": {
          "computerName": "[variables('hostName')]",
          "adminUserName": "[variables('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]",
          "linuxConfiguration": "[variables('linuxConfiguration')]"
        },
        "storageProfile": {
          "imageReference": "[variables('imageReferenceDbx')]",
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat('http://', variables('storageAccountName'), '.blob.core.windows.net/vhds/', variables('hostName'), '-osdisk.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          },
          "dataDisks": [
            {
              "name": "datadisk0",
              "diskSizeGB": "[variables('dataDiskSize')]",
              "lun": 0,
              "vhd": {
                "Uri": "[concat('http://', variables('storageAccountName'), '.blob.core.windows.net/vhds/', variables('hostName'), '-datadisk0.vhd')]"
              },
              "caching": "None",
              "createOption": "Empty"
            },
            {
              "name": "datadisk1",
              "diskSizeGB": "[variables('dataDiskSize')]",
              "lun": 1,
              "vhd": {
                "Uri": "[concat('http://', variables('storageAccountName'), '.blob.core.windows.net/vhds/', variables('hostName'), '-datadisk1.vhd')]"
              },
              "caching": "None",
              "createOption": "Empty"
            },
            {
              "name": "datadisk2",
              "diskSizeGB": "[variables('dataDiskSize')]",
              "lun": 2,
              "vhd": {
                "Uri": "[concat('http://', variables('storageAccountName'), '.blob.core.windows.net/vhds/', variables('hostName'), '-datadisk2.vhd')]"
              },
              "caching": "None",
              "createOption": "Empty"
            },
            {
              "name": "datadisk3",
              "diskSizeGB": "[variables('dataDiskSize')]",
              "lun": 3,
              "vhd": {
                "Uri": "[concat('http://', variables('storageAccountName'), '.blob.core.windows.net/vhds/', variables('hostName'), '-datadisk3.vhd')]"
              },
              "caching": "None",
              "createOption": "Empty"
            }
          ]
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces','nic0')]"
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[concat(variables('hostName'),'-',copyindex(1))]",
      "apiVersion": "2015-06-15",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', 'nic', copyindex(1))]"
      ],
      "copy": {
        "name": "vmLoop",
        "count": "[sub(parameters('vmCount'),1)]"
      },
      "plan": {
        "name": "[variables('mktSKU')]",
        "publisher": "[variables('mktPublisher')]",
        "product": "[variables('mktOffer')]"
      },
      "properties": {
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets', variables('availabilitySetSettings').name)]"
        },
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "osProfile": {
          "computerName": "[concat(variables('hostName'),'-',copyindex(1))]",
          "adminUserName": "[variables('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]",
          "linuxConfiguration": "[variables('linuxConfiguration')]"
        },
        "storageProfile": {
          "imageReference": "[variables('imageReferenceDbx')]",
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat('http://', variables('storageAccountName'), '.blob.core.windows.net/vhds/', variables('hostName'),'-',copyindex(1), '-osdisk.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          },
          "dataDisks": [
            {
              "name": "datadisk0",
              "diskSizeGB": "[variables('dataDiskSize')]",
              "lun": 0,
              "vhd": {
                "Uri": "[concat('http://', variables('storageAccountName'), '.blob.core.windows.net/vhds/', variables('hostName'),'-',copyindex(1), '-datadisk0.vhd')]"
              },
              "caching": "None",
              "createOption": "Empty"
            },
            {
              "name": "datadisk1",
              "diskSizeGB": "[variables('dataDiskSize')]",
              "lun": 1,
              "vhd": {
                "Uri": "[concat('http://', variables('storageAccountName'), '.blob.core.windows.net/vhds/', variables('hostName'),'-',copyindex(1), '-datadisk1.vhd')]"
              },
              "caching": "None",
              "createOption": "Empty"
            },
            {
              "name": "datadisk2",
              "diskSizeGB": "[variables('dataDiskSize')]",
              "lun": 2,
              "vhd": {
                "Uri": "[concat('http://', variables('storageAccountName'), '.blob.core.windows.net/vhds/', variables('hostName'),'-',copyindex(1), '-datadisk2.vhd')]"
              },
              "caching": "None",
              "createOption": "Empty"
            },
            {
              "name": "datadisk3",
              "diskSizeGB": "[variables('dataDiskSize')]",
              "lun": 3,
              "vhd": {
                "Uri": "[concat('http://', variables('storageAccountName'), '.blob.core.windows.net/vhds/', variables('hostName'),'-',copyindex(1), '-datadisk3.vhd')]"
              },
              "caching": "None",
              "createOption": "Empty"
            }
          ]
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',concat('nic',copyindex(1)))]"
            }
          ]
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('hostName'),'-',copyindex(), '/dbx-setup')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', variables('hostName'),'-',copyindex())]"
      ],
      "copy": {
        "name": "extensionLoop",
        "count": "[parameters('vmCount')]"
      },
      "properties": {
        "publisher": "Microsoft.OSTCExtensions",
        "type": "CustomScriptForLinux",
        "typeHandlerVersion": "1.2",
        "settings": {
          "fileUris": [
            "[concat(variables('templateURLBase'),'/azure-dbx-san-start.sh')]"
          ],
          "commandToExecute": "[concat('bash azure-dbx-san-start.sh ', reference(concat('nic0')).ipConfigurations[0].properties.privateIPAddress, ' dbx ', parameters('vmCount'),' ', copyindex() )]"
        }
      }
    }
  ]
}
